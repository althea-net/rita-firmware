---
# Builds the firmware

- name: Build firmware when not CI
  block:
    - name: Download files required for build
      shell: "cd {{source_dir}}; make -j{{ansible_processor_vcpus|int}} download"
      register: download_result
      ignore_errors: true

    - name: Print help on failure
      fail:
        msg: "Dependency download failed, run 'cd {{source_dir}}; make V=s world' to see why."
      when: download_result is failed

    - name: Build the firmware, could take a while
      shell: "cd {{source_dir}}; export RUST_TRIPLE={{rust_target}}; nice make -j{{ansible_processor_vcpus}} world"
      register: build_result
      ignore_errors: true

    - name: Print help on failure
      fail:
        msg: "Firmware compliation failed, run 'cd {{source_dir}}; export RUST_TRIPLE={{rust_target}}; make V=s world' to see why."
      when: build_result is failed

    - name: Print Success
      debug:
        msg: "Firmware Successfully built!"

    - name: Create staging folder
      file:
        path: completed-images/
        state: directory

    - name: Create archive folder
      file:
        path: images-archive/
        state: directory

    - name: Copy image to staging folder
      copy:
        src: "build/bin/targets/{{item}}"
        dest: "completed-images/{{ansible_date_time.date}}-{{ansible_date_time.hour}}-{{ansible_date_time.minute}}-{{item | basename}}"
      with_items: "{{image_paths}}"
      when: supported and copy_images and not extender

    - name: Copy image to staging folder
      copy:
        src: "build/bin/targets/{{item}}"
        dest: "completed-images/{{ansible_date_time.date}}-{{ansible_date_time.hour}}-{{ansible_date_time.minute}}-extender-{{item | basename}}"
      with_items: "{{image_paths}}"
      when: supported and copy_images and extender

    - name: Copy image to archive folder
      copy:
        src: "build/bin/targets/{{item}}"
        dest: "images-archive/{{ansible_date_time.date}}-{{ansible_date_time.hour}}-{{ansible_date_time.minute}}-{{item | basename}}"
      with_items: "{{image_paths}}"
      when: supported and copy_images

  when: not ci
